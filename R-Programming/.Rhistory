install.packages("slidify")
install.packages("kernsmooth")
y
install.packages("kernSmooth")
install.packages("KernSmooth")
require(KernSmooth)
q()
setwd("/mnt/hgfs/GitHub/datasciencecoursera/R-Programming")
x <- 1
print(x)
x <- x + 10
print(x)
message <- 'Assalamualikum'
print(message)
x
message
x <-
'NewExpression'
x
# I am adding a comment here
help
help()
clear()
cls
cls()
clear
x <- [1,2,3,4]
x <- 1:20
x
x <- 1:29
x
c <- c(0.5, 0.6)
v <- vector("numeric", length=20)
v
c <- c(0.5, a)
c <- c(0.5, 'a)
''
asd
asd
''
c <- c(0.5, 'a')
c
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
as.complex(x)
m <- matrix(nrow=2,ncol=3)
m
m[1][1] <- 1
m
m[1:2][1] <- 1
m
m[2][1] <- 1
m
x <- list(1,2,3,4,'123','a')
x
x <- factor(c('yes','yes','no'))
x
x <- factor(c('yes','yes','no','maybe'))
x
table(x)
unclass(x)
x <- factor(c('yes','yes','no','maybe'), levels = c('yes','no'))
x
x <- factor(c('yes','yes','no','maybe'), levels = c('yes','maybe','no'))
x
unclass(x)
is.na(x)
is.nan(x)
is.nan(m)
is.na(m)
x <- frame(foo = 1:4, bar = c(5,6,7,8,9))
x <- frame(foo = 1:5, bar = c(5,6,7,8,9))
x <- data.frame(foo = 1:5, bar = c(5,6,7,8,9))
x
x <- data.frame(foo = 1:5, bar = c(5,6,7,8,9), too=11-20)
x
x <- data.frame(foo = 1:5, bar = c(5,6,7,8,9), too=11:20)
x
data.matrix(x)
x <- data.frame(1:5,c(5,6,7,8,9), 11:20)
x
x <- c(1,2,3,4,5,6)
x[1]
x[2]
x[1:4]
x[4:2]
x[x>4]
x[x<4]
x[x<a]
x[x<'a']
x[x>'a']
as.character(x)
x
x < matrix(1:6,6:1)
x < matrix(1:6,2,3,4,5)
x < matrix(1:6,2,3)
x < matrix(1:6,2,3,4)
x[1,2]
x[1,1]
x[1:1]
x[1:2]
x[1:3]
x[2:3]
z <- list(1:4)
z
z <- list(1:4, 0.6)
z
x[[1]]
x[[1]]
x[1
]
z[[1]]
z[1]
z <- list(foo = 1:4, bar= 0.6)
z
x[c(1,2)]
z[c(1,2)]
z[[1][3]]
z[[[1]][[3]]]
z[[1]
]
z[[1][2]]
x <- list(1:4)
x
x[c(1,3)]
x <- list(ahmd = 1:4, zubair = 3:4, papa = 6:13)
x
x[[name]]
name <- "ahmd"
x[name]
x[name]
x[name]
x$a
x[["a"]]
x[["a", exact = FALSE]]
x[["z", exact = FALSE]]
x <- list(ahmd = 1:4, zubair = NA, papa = 6:13)
x$a
x[["a"]]
x[["z", exact = FALSE]]
x[!bad]
bad
x <- list(ahmd = 1:4, zubair = NA, papa = 6:13)
bad <- is.na(x)
bad
bad <- is.na(x)
bad
x[!bad]
data <- read.table("data.txt")
data
data.frame()
data_from_file
data_from_file <- read.table("data.txt")
data_from_file
data_from_file <- read.table("data.txt")
data_from_file
data_file_csv <- read.csv("data.csv")
data_file_csv
data_from_file <- read.table("data.txt")
data_from_file
data_file_csv <- read.csv("data.csv")
data_file_csv
y <- data.frame(data_file_csv)
y
y <- data.frame(data_file_csv)
dput(y)
y <- data.frame(data_file_csv)
dput(y, file = updated_data_file_csv.R)
y <- data.frame(data_file_csv)
dput(y, file = "updated_data_file_csv.R")
new.y <- dget("updated_data_file_csv.R")
new.y
dump(c("data_from_file","data_file_csv","y","new.y"), file = "data.R")
source("data.R")
data_from_file
data_from_csv
y
new.y
source("data.R")
data_from_file
data_file_csv
y
new.y
install.packages("swirl")
